
/*
 * 'A'+'B'
 * ===  == 66
 * 정수변환 => 65
 * 65+66 => 131 (int) char,short,byte => 연산 => int
 * 
 * '홍'+'홍' 10만으로 넘어감, char 범위를 넘어섬, 결과값은 범위를 안 벗어나게 int로 변경
 * byte도 127, 127+127 이미 byte 크기 넘어감
 * int이하만 자동계산 하고 long으로 넘어갈 것 같으면 그건 프로그래머가 알아서 형변환
 * 
 * ***주의점 : 데이터형을 초과하면 error가 아니라 오버플로우 발생 (값짤림)
 * 예) int ==> 1~10 11=>1 (계기판 넘어가는 것처럼)
 *    -128~127 => 128 =>
 *    ==================
 *    0 1 1 1 1 1 1 1 ==> 127이 컴퓨터에 저장
 *    ==================
 *    1 0 0 0 0 0 0 0 ==> 맨 앞 0/1은 부호, -값이 됨
 * 
 *  10+10.5
 *  ==
 *  10.0 ==> 같은 데이터형만 연산이 가능
 *  
 *  강제형변환
 *    (int)(10.5+10.5)
 *         =========== 우선 순위, 먼저 더하고 int
 *            1 => 21.0 => 21
 *    (int)10.5+(int)10.5 ==> 20
 *    ========= ========= 우선순위, int후 더하기
 *       10        10   
 *             +     
 *  
 *    
 */

public class 이항연산자_산술연산자2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        byte b1=64;
        byte b2=66;
        byte b3=(byte)(b1+b2);
        System.out.println("b3="+b3); 
        // 오버플로우 : 범위를 벗어났을 때, 양수+양수인데 음수가 나왔다? 다음 번으로 넘어가기 때문에
        /*/
         * 최근 오버플로우가 많은데, 트위터 같은 데이터는 페타바이트를 넘어선다
         * 
	     */
        
        int a=5;
        int b=2;
        System.out.println(a%b); // 5나누기2의 나머지 1+4/2
        System.out.println(-a%b); // -5나누기2의 나머지 -1-4/2
        System.out.println(a%-b); // 5나누기-2의 나머지 1+4/-2
        System.out.println(-a%-b); // -5나누기-2의 나머지-1-4/-2
        
        System.out.println((int)(10.5+10.5));
        System.out.println((int)10.5+(int)10.5);
        
	}
}
